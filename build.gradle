import java.util.function.Consumer

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.5.30'
    ext.immersionbar_version = '3.2.2'
    repositories {
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        mavenCentral()
        google()
//        jcenter()
    }
    dependencies {

        classpath 'com.android.tools.build:gradle:7.1.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        mavenCentral()
        google()
//        jcenter()
        maven { url 'https://jitpack.io' }
    }
    tasks.withType(Javadoc) {
        options {
            encoding "UTF-8"
            charSet 'UTF-8'
            links "http://docs.oracle.com/javase/7/docs/api"
        }
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

subprojects.forEach(new Consumer<Project>() {
    @Override
    void accept(Project project) {
        ["com.android.library"].forEach(new Consumer<String>() {
            @Override
            void accept(String s) {
                project.getPlugins().withId(s) {
                    project.afterEvaluate {
                        def file = new File(project.getProjectDir().parent, "gradle/publish-mavencentral.gradle")
                        if (file.exists()) {
                            project.apply from: file
                        }
                    }
                }
            }
        })
    }
})
